// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using blog_API.Migrations;

#nullable disable

namespace blog_API.Migrations
{
    [DbContext(typeof(PostDbContext))]
    [Migration("20221120173942_AddUserDetailEntity")]
    partial class AddUserDetailEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("blog_API.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Posted")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId_fk")
                        .HasColumnType("INTEGER");

                    b.HasKey("PostId");

                    b.HasIndex("UserId_fk");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("blog_API.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("blog_API.Models.UserDetail", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId_fkey")
                        .HasColumnType("INTEGER");

                    b.HasKey("DetailId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserId_fkey")
                        .IsUnique();

                    b.ToTable("UserDetail");
                });

            modelBuilder.Entity("blog_API.Models.Post", b =>
                {
                    b.HasOne("blog_API.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("blog_API.Models.UserDetail", b =>
                {
                    b.HasOne("blog_API.Models.User", "User")
                        .WithOne("UserDetail")
                        .HasForeignKey("blog_API.Models.UserDetail", "UserId_fkey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("blog_API.Models.User", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("UserDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
